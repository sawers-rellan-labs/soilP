```
library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
```
library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
xlsx_file <- here("inst", "extdata", "P_retention_class.xlsx")
soilclass <- read.xlsx(xlsx_file, sheetIndex = 1, colIndex = 1:11)
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
save(soilclass, file = here("data","soilclass.RData"))
tif_in <- here("inst","extdata", "tif",
"P_retention_potential_main_grey.tif")
tif_out <- here("inst","extdata", "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat
save(ISRIC2011, file = here("data", "ISRIC2011.RData"))
plot(ISRIC2011)
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
soilclass
save(soilclass, file = here("data","soilclass.RData"))
tif_in <- here("inst","extdata", "tif",
"P_retention_potential_main_grey.tif")
tif_out <- here("inst","extdata", "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat
save(ISRIC2011, file = here("data", "ISRIC2011.RData"))
plot(ISRIC2011)
ISRIC2011_hist <- hist(ISRIC2011,maxpixels = ncell(ISRIC2011),
breaks = c(0, 0.99 + 0:15))
ISRIC2011_hist$breaks[which(ISRIC2011_hist$counts > 0)]
plot(ISRIC2011, col = soilclass$color_hex[1:17], breaks = c(0,0.99 + 0:15))
xlsx_file <- here("inst", "extdata", "P_retention_class.xlsx")
soilclass <- read.xlsx(xlsx_file, sheetIndex = 1, colIndex = 1:11)
soilclass
xlsx_file <- here("inst", "extdata", "P_retention_class.xlsx")
soilclass <- read.xlsx(xlsx_file, sheetIndex = 1, colIndex = 1:11)
soilclass
library(devtools)
library(here)
load_all(pkg = here())
library(dplyr)
library(tidyr)
library(Hmisc)
library(MASS)
library(ggplot2)
data(soilclass)
test_tif <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"Global_distribution_of_soil_phosphorus_retention_potential.tif")
test_raster <- raster(test_tif)
test_raster <- rastre::raster(test_tif)
test_raster <- raster::raster(test_tif)
test_tif
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
test_tif <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"Global_distribution_of_soil_phosphorus_retention_potential.tif")
test_raster <- raster::raster(test_tif)
db <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"ISRIC_Phosphorus_Retention_Potential.mdb")
tab <- mdb.get(db)
pret <-
tab$P_newsuid_avg_PRET[-2]
tab$P_newsuid_avg_PRET[-2]
rat <- tab$P_RetMap_FINAL
colnames(rat)
rat
pret <- tab$P_newsuid_avg_PRET[-2]
levels(rat$SOIL1)
merge(rat,pret, by.x = "pret$CLAF", by.y ="SOIL1")
merge(rat,pret, by.x = "CLAF", by.y ="SOIL1")
merge(rat,pret, by.x = "SOIL1", by.y = "CLAF")
unique(pret$rat)
unique(pret$CLAF)
duplicated(pret$CLAF)
pret[duplicated(pret$CLAF)]
pret[duplicated(pret$CLAF),]
pret[pret$CLAF=="Qc",]
pret[pret$CLAF=="Qc" && pret$AvgOfSTPC == 1.0,]
pret[pret$CLAF=="Qc",]
pret[pret$CLAF=="Qc" && pret$AvgOfSTPC == 1,]
pret[pret$CLAF=="Qc",]
pret[pret$CLAF=="Qc" && pret$AvgOfSTPC == 1,]
which(pret$CLAF=="Qc" && pret$AvgOfSTPC==1)
pret$AvgOfSTPC==1
any(pret$AvgOfSTPC==1)
which(pret$AvgOfSTPC==1)
any(pret$CLAF=="Qc" && pret$AvgOfSTPC==1)
which(pret$CLAF=="Qc")
-which(pret$CLAF=="Qc")[2]
pret[-which(pret$CLAF=="Qc")[2],]
pret <- pret[-which(pret$CLAF=="Qc")[2],]
merge(rat,pret, by.x = "SOIL1", by.y = "CLAF")
nrow(rat)
merge(rat,pret, by.x = "SOIL1", by.y = "CLAF")
rat %>% dplyr::left_join(pret,by =c("SOIL1"="CLAF"))
rat <- rat %>% dplyr::left_join(pret,by = c("SOIL1"="CLAF"))
fullm <- cbind(rat[,c("MainCLASS",su_class)], p)
tab$P_newsuid_avg_PRET
pret <- tab$P_newsuid_avg_PRET
pret[duplicated(pret$CLAF),]
pret$FAO74.name == "Dunes/Shifting sands")
which(pret$FAO74.name == "Dunes/Shifting sands")
pret <- pret[-which(pret$FAO74.name == "Dunes/Shifting sands"),]
pret %>% dplyr::filter(FAO74.name == "Dunes/Shifting sands") -> pret
pret %>%
dplyr::filter(FAO74.name == "Dunes/Shifting sands") ->
pret
pret %>%
dplyr::filter(FAO74.name == "Dunes/Shifting sands") ->
pret
tab$P_newsuid_avg_PRET %>%
dplyr::filter(FAO74.name == "Dunes/Shifting sands") ->
pret
tab$P_newsuid_avg_PRET %>%
dplyr::filter(FAO74.name == "Dunes/Shifting sands") ->
pret
tab$P_newsuid_avg_PRET %>%
dplyr::filter(FAO74.name == "Dunes/Shifting sands") ->
pret
pret
tab$P_newsuid_avg_PRET %>%
dplyr::filter(FAO74.name != "Dunes/Shifting sands") ->
pret
pret
rat %>% dplyr::left_join(pret,by = c("SOIL1"="CLAF")) -> rat
library(devtools)
library(here)
load_all(pkg = here())
library(dplyr)
library(tidyr)
library(Hmisc)
library(MASS)
library(ggplot2)
data(soilclass)
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
test_tif <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"Global_distribution_of_soil_phosphorus_retention_potential.tif")
test_raster <- raster::raster(test_tif)
db <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"ISRIC_Phosphorus_Retention_Potential.mdb")
tab <- mdb.get(db)
tab$P_newsuid_avg_PRET %>%
dplyr::filter(FAO74.name != "Dunes/Shifting sands") ->
pret
pret
rat <- tab$P_RetMap_FINAL
FAO74 <- tab$KeyFAO74
colnames(FAO74) <- c("Key","name","Note")
m <- matrix(0,nrow = nrow(rat),ncol = nrow(FAO74))
colnames(m) <- FAO74$Key
colnames(m)[1] <- "V1"
soil_prop <- function(x,n) {
suid <- sym("SUID")
soil <- sym(paste0("SOIL",n))
prop <- sym(paste0("PROP",n))
x %>%
dplyr::select(!!suid, !!soil, !!prop) %>%
tidyr::spread(!!soil, !!prop, fill = 0) %>%
as.matrix()
}
for (idx in 1:8) {
print(idx)
soil_fr <- soil_prop(rat,idx)
mycols <- colnames(soil_fr[,-1])
m[,mycols] <- m[,mycols] + as.matrix(soil_fr[,-1])
}
colnames(m) <- paste0("FAO","_",colnames(m))
ind <- apply(m, 2, var) == 0
glacier <- colnames(m) == "FAO_GL"
m <- m[,!ind & !glacier]
data(soilclass)
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
test_tif <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"Global_distribution_of_soil_phosphorus_retention_potential.tif")
test_raster <- raster::raster(test_tif)
db <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"ISRIC_Phosphorus_Retention_Potential.mdb")
tab <- mdb.get(db)
tab$P_newsuid_avg_PRET %>%
dplyr::filter(FAO74.name != "Dunes/Shifting sands") ->
pret
pret
rat <- tab$P_RetMap_FINAL
FAO74 <- tab$KeyFAO74
colnames(FAO74) <- c("Key","name","Note")
m <- matrix(0,nrow = nrow(rat),ncol = nrow(FAO74))
colnames(m) <- FAO74$Key
colnames(m)[1] <- "V1"
soil_prop <- function(x,n) {
suid <- sym("SUID")
soil <- sym(paste0("SOIL",n))
prop <- sym(paste0("PROP",n))
x %>%
dplyr::select(!!suid, !!soil, !!prop) %>%
tidyr::spread(!!soil, !!prop, fill = 0) %>%
as.matrix()
}
for (idx in 1:8) {
soil_fr <- soil_prop(rat,idx)
mycols <- colnames(soil_fr[,-1])
m[,mycols] <- m[,mycols] + as.matrix(soil_fr[,-1])
}
colnames(m) <- paste0("FAO","_",colnames(m))
ind <- apply(m, 2, var) == 0
glacier <- colnames(m) == "FAO_GL"
m <- m[,!ind & !glacier]
su_class <- c("Lo","Mo","Hi","VH","MISC")
rat %>% dplyr::left_join(pret,by = c("SOIL1"="CLAF")) -> rat
fullm <- cbind(rat[,c("MainCLASS",su_class)],)
plot(P256, col = rev(RColorBrewer::colorRampPalette(color_pick)(256)))
library(devtools)
library(here)
load_all(pkg = here())
library(dplyr)
library(tidyr)
library(Hmisc)
library(MASS)
library(ggplot2)
data(soilclass)
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
test_tif <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"Global_distribution_of_soil_phosphorus_retention_potential.tif")
test_raster <- raster::raster(test_tif)
db <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"ISRIC_Phosphorus_Retention_Potential.mdb")
tab <- mdb.get(db)
tab$P_newsuid_avg_PRET %>%
dplyr::filter(FAO74.name != "Dunes/Shifting sands") ->
pret
pret
rat <- tab$P_RetMap_FINAL
FAO74 <- tab$KeyFAO74
colnames(FAO74) <- c("Key","name","Note")
m <- matrix(0,nrow = nrow(rat),ncol = nrow(FAO74))
colnames(m) <- FAO74$Key
colnames(m)[1] <- "V1"
soil_prop <- function(x,n) {
suid <- sym("SUID")
soil <- sym(paste0("SOIL",n))
prop <- sym(paste0("PROP",n))
x %>%
dplyr::select(!!suid, !!soil, !!prop) %>%
tidyr::spread(!!soil, !!prop, fill = 0) %>%
as.matrix()
}
for (idx in 1:8) {
soil_fr <- soil_prop(rat,idx)
mycols <- colnames(soil_fr[,-1])
m[,mycols] <- m[,mycols] + as.matrix(soil_fr[,-1])
}
colnames(m) <- paste0("FAO","_",colnames(m))
ind <- apply(m, 2, var) == 0
glacier <- colnames(m) == "FAO_GL"
m <- m[,!ind & !glacier]
su_class <- c("Lo","Mo","Hi","VH","MISC")
rat %>% dplyr::left_join(pret,by = c("SOIL1"="CLAF")) -> rat
fullm <- cbind(rat[,c("MainCLASS",su_class)],)
scale256 <- function(x){round(254 * (x - min(x))/(max(x) - min(x)))}
rat$LD2 <- scale256(plda$x[,"LD2"])
scale256 <- function(x){round(254 * (x - min(x))/(max(x) - min(x)))}
rat$LD2 <- scale256(plda$x[,"LD2"])
fit <- lda(MainCLASS ~ .,data=fullm)
fullm <- cbind(rat[,c("MainCLASS",su_class)], m)
fit <- lda(MainCLASS ~ .,data=fullm)
plda <-  predict(object = fit, # predictions
newdata = fullm[,-1])
scale256 <- function(x){round(254 * (x - min(x))/(max(x) - min(x)))}
rat$LD2 <- scale256(plda$x[,"LD2"])
P256 <- read_P_ISRIC(tif = test_tif, soilclass = rat,
is = "SUID",
becomes = "LD2")
color_pick <- soilclass %>%
dplyr::select(color_hex) %>%
dplyr::filter( main %in% c("VH1","Hi1","Mo1","Lo2","Lo1"))
color_pick <- soilclass %>%
dplyr::select(color_hex) %>%
dplyr::filter(main %in% c("VH1","Hi1","Mo1","Lo2","Lo1"))
color_pick <- soilclass %>%
dplyr::select(color_hex)
color_pick
soil$class
color_pick <- soilclass %>%
dplyr::filter(main %in% c("VH1","Hi1","Mo1","Lo2","Lo1")) %>%
dplyr::select(color_hex)
color_pick
color_pick <- soilclass %>%
dplyr::filter(main %in% c("VH1","Hi1","Mo1","Mo2","Lo2","Lo1")) %>%
dplyr::select(color_hex)
plot(P256, col = rev(RColorBrewer::colorRampPalette(color_pick)(256)))
RColorBrewer::colorRampPalette(color_pick)
colorRampPalette(color_pick)
library(RColorBrewer)
plot(P256, col = rev(::colorRampPalette(color_pick)(256)))
plot(P256, col = rev(colorRampPalette(color_pick)(256)))
color_pick
colorRampPalette(color_pick)
colorRampPalette(color_pick)
colorRampPalette(color_pick)
soilclass$main %in% c("VH1","Hi1","Mo1","Mo2","Lo2","Lo1")
soilclass$color_hex[soilclass$main %in% c("VH1","Hi1","Mo1","Mo2","Lo2","Lo1")]
color_pick <- soilclass %>%
dplyr::filter(main %in% c("VH1","Hi1","Mo1","Mo2","Lo2","Lo1")) %>%
dplyr::select(color_hex)
color_pick
soilclass$color_hex[soilclass$main %in% c("VH1","Hi1","Mo1","Mo2","Lo2","Lo1")]
colorRampPalette(color_pick)
p<-soilclass$color_hex[soilclass$main %in% c("VH1","Hi1","Mo1","Mo2","Lo2","Lo1")]
colorRampPalette(p)
class_pick <- c("VH1","Hi1","Mo1","Mo2","Lo2","Lo1")
color_pick <-with(soilclass, color_hex[main %in% class_pick])
colorRampPalette(color_pick)
plot(P256, col = rev(colorRampPalette(color_pick)(256)))
colorRampPalette(color_pick)
colorRampPalette(color_pick)(256)
plot(P256, col = colorRampPalette(color_pick)(256))
colorRampPalette(color_pick)(256)
pal = colorRampPalette(color_pick)(256)
plot(P256, col = pal)
P256 <- read_P_ISRIC(tif = test_tif, soilclass = rat,
is = "SUID",
becomes = "LD2")
plot(P256, col = pal)
plot(P256)
P256
fit <- lda(MainCLASS ~ .,data=fullm)
plda <-  predict(object = fit, # predictions
newdata = fullm[,-1])
fit <- lda(MainCLASS ~ .,data=fullm)
plda <-  predict(object = fit, # predictions
newdata = fullm[,-1])
scale256 <- function(x){round(254 * (x - min(x))/(max(x) - min(x)))}
rat$LD2 <- scale256(plda$x[,"LD2"])
rat$LD2
P256 <- read_P_ISRIC(tif = test_tif, soilclass = rat,
is = "SUID",
becomes = "LD2")
plot(P256)
plot(LD3 ~ LD2,
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
plot(P256)
raster::plot(P256)
raster::plot(P256,colorRampPalette(color_pick)(256))
raster::plot(P256,col = colorRampPalette(color_pick)(256))
plot(LD2 ~ LD1 ,
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
plot(LD3 ~ LD2,
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
panel = function(x, y, ...) {
points(x, y, ...)
text(x,y,labels=rat$MainCLASS,...) ## You change labels here
},
data = plda$x)
plot(LD3 ~ LD2,
panel = function(x, y, ...) {
points(x, y, ...)
text(x,y,labels=rat$MainCLASS,...) ## You change labels here
},
data = plda$x)
plot(LD3 ~ scale256(LD2),
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
scores <- plda$x
scores <- plda$x
scale256(scores$LD2)
plda$x[,"LD2"]
plot(LD3 ~ scale256(LD2),
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
text(scale256(plda$x[,"LD2"]),
scale256(plda$x[,"LD3"]),
labels=rat$MainCLASS,
cex= 0.7)
plot(LD3 ~ scale256(LD2),
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
text(scale256(plda$x[,"LD2"]),
plda$x[,"LD3"],
labels=rat$MainCLASS,
cex= 0.7)
plot(LD2 ~ LD1 ,
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
plot(LD2 ~ LD1 ,
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
text(plda$x[,"LD1"],
plda$x[,"LD3"],
labels=rat$MainCLASS,
cex= 0.7)
plot(LD2 ~ LD1 ,
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
text(plda$x[,"LD1"],
plda$x[,"LD2"],
labels=rat$MainCLASS,
cex= 0.7)
plot(LD3 ~ scale256(LD2),
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
text(scale256(plda$x[,"LD2"]),
plda$x[,"LD3"],
labels=rat$MainCLASS,
cex= 0.7)
plot(LD3 ~ scale256(LD2),
col  = soilclass$color_hex[match(rat$MainCLASS,soilclass$main)],
pch  = 19,
data = plda$x)
text(scale256(plda$x[,"LD2"]),
plda$x[,"LD3"],
labels=rat$MainCLASS,
cex= 0.7)
