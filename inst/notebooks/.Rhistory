library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
```
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
save(soilclass, file = here("data","soilclass.RData"))
tif_in <- here("inst","extdata", "tif",
"P_retention_potential_main_grey.tif")
tif_out <- here("inst","extdata", "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat
save(ISRIC2011, file = here("data", "ISRIC2011.RData"))
plot(ISRIC2011)
ISRIC2011_hist <- hist(ISRIC2011,maxpixels = ncell(ISRIC2011),
breaks = c(0, 0.99 + 0:15))
ISRIC2011_hist$breaks[which(ISRIC2011_hist$counts > 0)]
plot(ISRIC2011, col = soilclass$color_hex[1:17], breaks = c(0,0.99 + 0:15))
levelplot(ISRIC2011, att = "main", col.regions = soilclass$color_hex[1:16],
maxpixels = ncell(ISRIC2011))
xlsx_file <- here("inst", "extdata", "P_retention_class.xlsx")
soilclass <- read.xlsx(xlsx_file, sheetIndex = 1, colIndex = 1:11)
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
```
library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
```
library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
```
xlsx_file <- here("inst", "extdata", "P_retention_class.xlsx")
soilclass <- read.xlsx(xlsx_file, sheetIndex = 1, colIndex = 1:11)
soilclass
library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
```
library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
```
library(here)
library(xlsx)
library(soilP)
library(raster)
library(rasterVis)
xlsx_file <- here("inst", "extdata", "P_retention_class.xlsx")
soilclass <- read.xlsx(xlsx_file, sheetIndex = 1, colIndex = 1:11)
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
save(soilclass, file = here("data","soilclass.RData"))
tif_in <- here("inst","extdata", "tif",
"P_retention_potential_main_grey.tif")
tif_out <- here("inst","extdata", "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat
save(ISRIC2011, file = here("data", "ISRIC2011.RData"))
plot(ISRIC2011)
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first element of a vector
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
soilclass
save(soilclass, file = here("data","soilclass.RData"))
tif_in <- here("inst","extdata", "tif",
"P_retention_potential_main_grey.tif")
tif_out <- here("inst","extdata", "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat
save(ISRIC2011, file = here("data", "ISRIC2011.RData"))
plot(ISRIC2011)
ISRIC2011_hist <- hist(ISRIC2011,maxpixels = ncell(ISRIC2011),
breaks = c(0, 0.99 + 0:15))
ISRIC2011_hist$breaks[which(ISRIC2011_hist$counts > 0)]
plot(ISRIC2011, col = soilclass$color_hex[1:17], breaks = c(0,0.99 + 0:15))
xlsx_file <- here("inst", "extdata", "P_retention_class.xlsx")
soilclass <- read.xlsx(xlsx_file, sheetIndex = 1, colIndex = 1:11)
soilclass
xlsx_file <- here("inst", "extdata", "P_retention_class.xlsx")
soilclass <- read.xlsx(xlsx_file, sheetIndex = 1, colIndex = 1:11)
soilclass
