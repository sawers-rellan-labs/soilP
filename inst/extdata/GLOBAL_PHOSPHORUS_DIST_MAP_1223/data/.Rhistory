p.test <- p.class[c("color","retention.order", "name")]
class.idx <- which(colnames(accn.test) == "P.retention.main.class")
colnames(accn.test)[class.idx] <- "retention.order"
head(accn.test)
head(p.test)
test <- merge(accn.test, p.test, all.x =TRUE)
library(maps)
library(ggplot2)
# This is ugly and contrived!
# need more elegant solution!
l <- levels(rc)[[1]]
colnames(l)[2] <- "name"
#before the merge
test <- test[order(test$retention.order),]
test$name <- factor(test$name,
levels=as.character(l$name))
quartz()
boxplot(Elevation ~ name, data=test, las =2)
break.order <- merge(l, data.frame(name =levels(factor(test$name))))
break.order <- break.order[order(break.order$ID),]
break.order$name <- factor(break.order$name,
levels=as.character(break.order$name))
break.order$color <- p.class$color[match(break.order$ID, p.class$retention.order)]
break.order$color.name <- p.class$color.name[match(break.order$ID, p.class$retention.order)]
pal <- break.order$color
names(pal) <- break.order$name
break.order$color
world <- map_data("world")
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, colour = name),
data = test, alpha = .5) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) + theme_bw()
# Steps for assigning  hex strings and names to colors #########################
# I built the table then I used it as input
#
# pal <- as.matrix(p.class[, c("r","g","b")])
# rgb2hex <- function(x) sprintf('#%s',paste(as.hexmode(c(x[1],x[2],x[3])),collapse = ''))
# apply(pal,1,rgb2hex)
# color.id(pal[1,])
# p.class$color.hex <- apply(pal,1,rgb2hex)
# p.class$color.name <- unlist(lapply(sapply(apply(pal,1,rgb2hex), color.id),`[[`, 1))
# write.table(p.class,file = "p.class.tab", sep= "\t", quote = FALSE, row.names = FALSE)
# color.id(p.class$color.hex[1])
# Extracting palette in order to infer values ##################################
# after attempting this repeteadly I just loaded the arcgis mxd file in Arcgis
# and in the properties of the layer extyracted th RGB values of the legend
# in the unique values symbology.
# setwd('/Users/fvrodriguez/Desktop/tif')
# pot<- NULL
# pot <- readTIFF("P_retention_potential_main_grey.tif",convert=TRUE)
# writeTIFF(pot,"P_retention.tif",reduce=FALSE)
# quartz()
# plot(pot)
# str(pot)
# color.id(255*pot[1000,1000,])
# pot[1000,1000,3]
#
# pal_potential <- extract_colours("P_retention.tif",15)
# color.name <- unlist(lapply(sapply(pal_potential, color.id), `[[`, 1))
#
# color.name
#
# quartz()
# pie(rep(1, length(pal_potential)),
#     labels = sprintf("%d (%s)", seq_along(pal_potential), color.name),
#     col = pal_potential)
# Using other phosphorus databases #############################################
setwd('/Users/fvrodriguez/Desktop/GLOBAL_PHOSPHORUS_DIST_MAP_1223/data')
library(raster)
library(ncdf4) # this data base comes in the nc  format
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(phospho.nc)
vars <- names(phospho.nc$var)
for( var.name in vars){
r <- brick("pforms_den.nc", varname=var.name,
nl = 1)[[1]]
test[var.name] <- extract(x=r,y = test[,c("Long","Lat")])
}
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, colour = lab),
data = test, alpha = .5) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) + theme_bw()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, aes = Elevation_class,colour = name),
data = test, alpha = .5) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test, alpha = .5) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test, alpha = .5) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(2, 1)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test, alpha = .5) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(16, 17)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test, alpha = .5) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
setwd('/Users/fvrodriguez/Desktop/GLOBAL_PHOSPHORUS_DIST_MAP_1223/data')
library(raster)
library(ncdf4) # this data base comes in the nc  format
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(phospho.nc)
vars <- names(phospho.nc$var)
for( var.name in vars){
r <- brick("pforms_den.nc", varname=var.name,
nl = 1)[[1]]
test[var.name] <- extract(x=r,y = test[,c("Long","Lat")])
}
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_colour_brewer(palette = "spectral") +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_colour_brewer(palette = "Spectral") +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_colour_gradientn(colours = myPalette(100), limits=c(1, 8))
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_colour_continuous(palette = "Spectral") +
sc +
theme_bw()
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_colour_gradientn(colours = myPalette(160), limits=c(1, 160))
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_colour_continuous(palette = "Spectral") +
sc +
theme_bw()
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_colour_gradientn(colours = myPalette(160), limits=c(1, 160))
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) + sc +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
quartz()
plot(name~lab,data=test)
boxplot(lab~name,data=test)
quartz()
boxplot(lab~name,data=test)
quartz()
boxplot(lab~name, las = 2, data=test)
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Labile Phosphorus Concentration") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Labile",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_colour_gradientn(name="Labile\nPhosphorus", colours = myPalette(160), limits=c(1, 160))
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Phosphorus Retention Potential (ISRIC 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) + sc +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Labile Phosphorus Concentration (NASA, Yang et al. 2015)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) + sc +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Labile Phosphorus Concentration (ISRIC,Batjes 20011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_colour_gradientn(name="Labile\nPhosphorus", colours = myPalette(160), limits=c(1, 160))
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s geographic distribution\nand Soil Labile Phosphorus Concentration (NASA, Yang et al. 2015)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) + sc +
theme_bw()
quartz()
boxplot(lab~name, las = 2, data=test,
main = "Corresponcence between Phosphorus Availability Maps ISRI Vs NASA",
ylab = "Phosphorus retention Potential",
xlab = "Labile Phosphorus Concentration")
quartz()
boxplot(lab~name, las = 2, data=test,
main = "Corresponcence between Phosphorus Availability Maps\nISRI Vs NASA",
ylab = "Phosphorus retention Potential",
xlab = "Labile Phosphorus Concentration")
quartz()
boxplot(lab~name, las = 2, data=test,
main = "Corresponcence between Phosphorus Availability Maps\nISRIC Vs NASA",
ylab = "Phosphorus retention Potential",
xlab = "Labile Phosphorus Concentration")
quartz()
boxplot(lab~name, las = 2, data=test,
main = "Corresponcence between Phosphorus Availability Maps\nISRIC Vs NASA",
xlab = "Phosphorus Retention Potential Main Class",
ylab = "Labile Phosphorus Concentration")
quartz()
boxplot(lab~name, las = 2, data=test,
main = "Corresponcence between Phosphorus Availability Maps\nNASA Vs ISRIC",
xlab = "Phosphorus Retention Potential Main Class",
ylab = "Labile Phosphorus Concentration")
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_colour_gradientn(name="Labile\nPhosphorus", colours = myPalette(160), limits=c(1, 160))
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s Geographic Distribution\nand Soil Labile Phosphorus Concentration (NASA, Yang et al.2013)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) + sc +
theme_bw()
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_colour_gradientn(name="Labile\nPhosphorus", colours = myPalette(160), limits=c(1, 160))
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s Geographic Distribution\nand Soil Labile Phosphorus Concentration (NASA, Yang et al. 2013)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) + sc +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s Geographic Distribution\nand Soil Labile Phosphorus Concentration (ISRIC,Batjes 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
quartz()
boxplot(Elevation ~ name, data=test, las =2)
quartz()
boxplot(lab~name, las = 2, data=test,
main = "Corresponcence between Phosphorus Availability Maps\nNASA (2013) Vs ISRIC (2011)",
xlab = "Phosphorus Retention Potential Main Class",
ylab = "Labile Phosphorus Concentration")
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_colour_gradientn(name="Labile Inorganic\nPhosphorus", colours = myPalette(160), limits=c(1, 160))
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s Geographic Distribution\nand Soil Labile Phosphorus Concentration (NASA, Yang et al. 2013)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_cartesian(xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) + sc +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s Geographic Distribution\nand Phosphorus Retention Potential (ISRIC,Batjes 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test) +
coord_cartesian(ratio = 1, xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s Geographic Distribution\nand Phosphorus Retention Potential (ISRIC,Batjes 2011)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class,colour = name),
data = test) +
coord_fixed(ratio = 1, xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_color_manual(values= rev(pal),
name="Phosphorus\nRetention\nPotential",
breaks = rev(break.order$name)) +
scale_shape_manual(values = c(17, 16)) +
theme_bw()
quartz()
ggplot(world, aes(long, lat))  +
ggtitle("Accession selection for F1s Geographic Distribution\nand Soil Labile Phosphorus Concentration (NASA, Yang et al. 2013)") +
geom_polygon(aes(group = group), fill = "white", color = "gray40",
size = .2) +
geom_point(aes(x = Long, y = Lat, shape = Elevation_class, colour = lab),
data = test) +
coord_fixed(ratio = 1, xlim = c(-110,-50),ylim = c(-23, 30)) +
scale_shape_manual(values = c(17, 16)) + sc +
theme_bw()
quartz()
boxplot(lab~name, las = 2, data=test,
main = "Corresponcence between Phosphorus Availability Maps\nNASA (2013) Vs ISRIC (2011)",
xlab = "Phosphorus Retention Potential Main Class",
ylab = "Labile Inorganic Phosphorus")
test[,var.name]
test[,c("name",var.name)]
pairs(test[,c("name",var.name)])
test[,c("name",var.name)]
quartz()
pairs(test[,c("name",var.name)])
plotmatrix(test[,c("name",var.name)])
library(ggplot2)
quartz()
plotmatrix(test[,c("name",var.name)])
install.packages("GGally")
library(ggplot2)
quartz()
ggpairs(test[,c("name",var.name)])
library(GGally)
quartz()
ggpairs(test[,c("name",var.name)])
library(GGally)
quartz()
ggpairs(test[,c("name",var.name)], cardinality_threshold =16)
test[,c("name",var.name)]
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(phospho.nc)
vars <- names(phospho.nc$var)
for( var.name in vars){
r <- brick("pforms_den.nc", varname=var.name,
nl = 1)[[1]]
test[var.name] <- extract(x=r,y = test[,c("Long","Lat")])
}
vars
library(GGally)
quartz()
ggpairs(test[,c("name",vars)], cardinality_threshold =16)
test$name
as.numeric(test$name)
data.frame(retention = as.numeric(test$name))
quartz()
ggpairs(cbind(data.frame(retention = as.numeric(test$name))),
test[,c(vars)])
test[,c(vars)]
cbind(data.frame(retention = as.numeric(test$name))), test[,c(vars)])
cbind(data.frame(retention = as.numeric(test$name)), test[,c(vars)])
ggpairs(cbind(data.frame(retention = as.numeric(test$name)), test[,c(vars)]))
quartz()
ggpairs(cbind(data.frame(retention = as.numeric(test$name)), test[,c(vars)]))
