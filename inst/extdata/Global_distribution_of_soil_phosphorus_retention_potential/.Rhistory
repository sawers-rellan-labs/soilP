width = 30, height = 5)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
plotQ(qlist=qlist, imgoutput="join", clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
pre <- paste(dirbase,"HapMap.WILDLAC640.nonrelated.new.world.20K.", sep="")
dirbase <-"/Users/fvrodriguez/repos/kingraph/admixture/"
pre <- paste(dirbase,"HapMap.WILDLAC640.nonrelated.new.world.20K.", sep="")
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q"))
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q"), sep ="")
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q"), sep =""))
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q", sep =""))
qlist
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
args[1] <- '~/repos/kingraph/admixture/CIAT.640.20K.7.Q'
args[2] <- '~/repos/kingraph/admixture/CIAT.list'
base.out <- basename(args[1])
Q <- as.matrix(read.table(file = args[1]))
n.pop <- ncol(Q)
tbl <- assign.pop(Q)
tbl <- tbl[order(tbl$pop,tbl$S),]
tbl.out <-tbl[,c("ind","pop","p","S")]
if(length(args[2])>0){
ind <- read.table(file = args[2])
ind <- data.frame(ind=as.numeric(row.names(ind)),
name=as.factor(ind$V1))
tbl.out <- merge(x=ind,y=tbl.out, by='ind')
}
founders <- tbl[tbl$p>0.9,]
tbl.col <-NULL
if(n.pop <= 9){
tbl.col <- brewer.pal(n.pop, "Set1")
}
tbl7 <- tbl7[order(tbl7$pop,tbl$S),]
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
args[1] <- '~/repos/kingraph/admixture/HapMap.241.20K.7.Q'
args[2] <- '~/repos/kingraph/admixture/HapMap.list'
base.out <- basename(args[1])
Q <- as.matrix(read.table(file = args[1]))
n.pop <- ncol(Q)
tbl <- assign.pop(Q)
tbl <- tbl[order(tbl$pop,tbl$S),]
tbl.out <-tbl[,c("ind","pop","p","S")]
if(length(args[2])>0){
ind <- read.table(file = args[2])
ind <- data.frame(ind=as.numeric(row.names(ind)),
name=as.factor(ind$V1))
tbl.out <- merge(x=ind,y=tbl.out, by='ind')
}
founders <- tbl[tbl$p>0.9,]
tbl.col <-NULL
if(n.pop <= 9){
tbl.col <- brewer.pal(n.pop, "Set1")
}
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
qlist <- readQ(paste(dirbase, "HapMap.241.20K.7.Q", sep =""))
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
tbl$pop <- factor(tbl$pop, levels = c("pop4","pop5","pop6","pop1","pop3","pop0","pop2"))
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
tbl <- tbl[order(tbl$pop,tbl$S),]
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist <- readQ(paste(dirbase, "HapMap.241.20K.7.Q", sep =""))
tbl$pop <- factor(tbl$pop, levels = c("pop4","pop5","pop6","pop1","pop3","pop0","pop2"))
tbl <- tbl[order(tbl$pop,tbl$S),]
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
args[1] <- '~/repos/kingraph/admixture/CIAT.640.20K.7.Q'
args[2] <- '~/repos/kingraph/admixture/CIAT.list'
base.out <- basename(args[1])
Q <- as.matrix(read.table(file = args[1]))
n.pop <- ncol(Q)
tbl <- assign.pop(Q)
tbl <- tbl[order(tbl$pop,tbl$S),]
tbl.out <-tbl[,c("ind","pop","p","S")]
if(length(args[2])>0){
ind <- read.table(file = args[2])
ind <- data.frame(ind=as.numeric(row.names(ind)),
name=as.factor(ind$V1))
tbl.out <- merge(x=ind,y=tbl.out, by='ind')
}
founders <- tbl[tbl$p>0.9,]
tbl.col <-NULL
if(n.pop <= 9){
tbl.col <- brewer.pal(n.pop, "Set1")
}
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q", sep =""))
tbl$pop <- factor(tbl$pop, levels = c("pop4","pop5","pop6","pop1","pop3","pop0","pop2"))
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q", sep =""))
tbl$pop <- factor(tbl$pop, levels = c("pop4","pop5","pop6","pop1","pop3","pop0","pop2"))
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q", sep =""))
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q", sep =""))
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q", sep =""))
tbl$pop <- factor(tbl$pop, levels = c("pop4","pop5","pop6","pop1","pop3","pop0","pop2"))
tbl <- tbl[order(tbl$pop,tbl$S),]
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q", sep =""))
tbl$pop <- factor(tbl$pop, levels = c("pop4","pop5","pop6","pop1","pop3","pop0","pop2"))
tbl <- tbl[order(tbl$pop,tbl$S),]
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
tbl
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
k7order
qlist[[1]][k7order,]
qlist <- readQ(paste(dirbase, "CIAT.640.20K.7.Q", sep =""))
tbl$pop <- factor(tbl$pop, levels = c("pop4","pop5","pop6","pop1","pop3","pop0","pop2"))
tbl <- tbl[order(tbl$pop,tbl$S),]
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=tbl$pop)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=data.frame(pop=tbl$pop))
as.character(tbl$pop)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=data.frame(pop=as.character(tbl$pop)))
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=as.character(tbl$pop))
onelabset
threelabset <- read.delim(system.file("files/metadata.txt", package="pophelper"), header=T,stringsAsFactors=F)
threelabset
str(threelabset)
data.frame(as.character(tbl$pop))
data.frame(pop = as.character(tbl$pop))
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=data.frame(pop = as.character(tbl$pop)))
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=data.frame(pop = character(tbl$pop)))
character(tbl$pop))
character(tbl$pop)
as.character(tbl$pop)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=data.frame(pop = as.character(tbl$pop)))
df <- data.frame(pop = as.character(tbl$pop))
str(df)
df <- data.frame(pop = as.character(tbl$pop))
str(df)
label.df <- data.frame(pop = as.character(tbl$pop))
str(label.df)
str(label.df)
label.df <- data.frame(pop = as.character(tbl$pop))
str(label.df)
label.df<- lapply(label.df, as.character)
str(label.df)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=label.df)
label.df<- as.data.frame(lapply(label.df, as.character))
str(label.df)
label.df <- data.frame(pop = as.character(tbl$pop), stringsAsFactors= FALSE)
str(label.df)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=label.df)
args[1] <- '~/repos/kingraph/admixture/HapMap.241.20K.7.Q'
args[2] <- '~/repos/kingraph/admixture/HapMap.list'
base.out <- basename(args[1])
Q <- as.matrix(read.table(file = args[1]))
n.pop <- ncol(Q)
tbl <- assign.pop(Q)
tbl <- tbl[order(tbl$pop,tbl$S),]
tbl.out <-tbl[,c("ind","pop","p","S")]
if(length(args[2])>0){
ind <- read.table(file = args[2])
ind <- data.frame(ind=as.numeric(row.names(ind)),
name=as.factor(ind$V1))
tbl.out <- merge(x=ind,y=tbl.out, by='ind')
}
founders <- tbl[tbl$p>0.9,]
tbl.col <-NULL
if(n.pop <= 9){
tbl.col <- brewer.pal(n.pop, "Set1")
}
qlist <- readQ(paste(dirbase, "HapMap.241.20K.7.Q", sep =""))
tbl$pop <- factor(tbl$pop, levels = c("pop4","pop5","pop6","pop1","pop3","pop0","pop2"))
tbl <- tbl[order(tbl$pop,tbl$S),]
k7order <- as.numeric(levels(tbl$ind))[tbl$ind]
qlist[[1]] <- qlist[[1]][k7order,]
label.df <- data.frame(pop = as.character(tbl$pop), stringsAsFactors= FALSE)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5)
plotQ(qlist=qlist, clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5, grplab=label.df)
dirbase <-"/Users/fvrodriguez/repos/kingraph/admixture/"
pre <- paste(dirbase,"HapMap.WILDLAC640.nonrelated.new.world.20K.", sep="")
post <- ".Q"
myK <- c(2,3,5,7)
qfiles <- paste(pre,myK,post, sep="")
qlist <- readQ(qfiles)
k7order <- as.numeric(levels(tbl7$ind))[tbl7$ind]
qlist[[1]] <- qlist[[1]][k7order,]
qlist[[2]] <- qlist[[2]][k7order,]
qlist[[3]] <- qlist[[3]][k7order,]
qlist[[4]] <- qlist[[4]][k7order,]
plotQ(qlist=qlist, imgoutput="join", clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5,grplab=label.df)
label.df <- data.frame(pop = as.character(tbl7$pop), stringsAsFactors= FALSE)
plotQ(qlist=qlist, imgoutput="join", clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5,grplab=label.df)
library(pophelper)
dirbase <-"/Users/fvrodriguez/repos/kingraph/admixture/"
pre <- paste(dirbase,"HapMap.WILDLAC640.nonrelated.new.world.20K.", sep="")
post <- ".Q"
myK <- c(2,3,5,7)
qfiles <- paste(pre,myK,post, sep="")
qlist <- readQ(qfiles)
k7order <- as.numeric(levels(tbl7$ind))[tbl7$ind]
qlist[[1]] <- qlist[[1]][k7order,]
qlist[[2]] <- qlist[[2]][k7order,]
qlist[[3]] <- qlist[[3]][k7order,]
qlist[[4]] <- qlist[[4]][k7order,]
label.df <- data.frame(pop = as.character(tbl7$pop), stringsAsFactors= FALSE)
plotQ(qlist=qlist, imgoutput="join", clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5,grplab=label.df)
colnames(qlist[[1]]) <- c("Cluster2", "Cluster5")
colnames(qlist[[2]]) <- c("Cluster6","Cluster5", "Cluster2")
colnames(qlist[[3]]) <- c("Cluster1","Cluster4", "Cluster6","Cluster2","Cluster5")
label.df <- data.frame(pop = as.character(tbl7$pop), stringsAsFactors= FALSE)
plotQ(qlist=qlist, imgoutput="join", clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5,grplab=label.df)
label.df <- data.frame(pop = as.character(tbl7$pop), stringsAsFactors= FALSE)
plotQ(qlist=qlist, imgoutput="join", clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5,grplab=label.df)
colnames(qlist[[1]]) <- c("Cluster2", "Cluster5")
colnames(qlist[[2]]) <- c("Cluster6","Cluster5", "Cluster2")
colnames(qlist[[3]]) <- c("Cluster5","Cluster4", "Cluster6","Cluster2","Cluster1")
label.df <- data.frame(pop = as.character(tbl7$pop), stringsAsFactors= FALSE)
plotQ(qlist=qlist, imgoutput="join", clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5,grplab=label.df)
# barplot(1:7, col = tbl7.col)
colnames(qlist[[1]]) <- c("Cluster2", "Cluster5")
colnames(qlist[[2]]) <- c("Cluster6","Cluster5", "Cluster2")
colnames(qlist[[3]]) <- c("Cluster5","Cluster2", "Cluster6","Cluster4","Cluster1")
label.df <- data.frame(pop = as.character(tbl7$pop), stringsAsFactors= FALSE)
plotQ(qlist=qlist, imgoutput="join", clustercol= tbl7.col, imgtype="pdf",
width = 30, height = 5,grplab=label.df)
library(rjson)
library(GSIF)
pnts <- data.frame(lon=c(10.65,5.36), lat=c(51.81,51.48), id=c("p1","p2"))
coordinates(pnts) <- ~lon+lat
proj4string(pnts) <- CRS("+proj=longlat +datum=WGS84")
pnts
soilgrids.r <- REST.SoilGrids(c("ORCDRC","PHIHOX"))
str(soilgrids.r)
ov <- over(soilgrids.r,pnts)
library(sp)
pnts <- data.frame(lon=c(10.65,5.36), lat=c(51.81,51.48), id=c("p1","p2"))
coordinates(pnts) <- ~lon+lat
proj4string(pnts) <- CRS("+proj=longlat +datum=WGS84")
pnts
soilgrids.r <- REST.SoilGrids(c("ORCDRC","PHIHOX"))
str(soilgrids.r)
ov <- over(soilgrids.r,pnts)
library(rjson)
library(GSIF)
library(sp)
pnts <- data.frame(lon=c(10.65,5.36), lat=c(51.81,51.48), id=c("p1","p2"))
coordinates(pnts) <- ~lon+lat
proj4string(pnts) <- CRS("+proj=longlat +datum=WGS84")
pnts
soilgrids.r <- REST.SoilGrids(c("ORCDRC","PHIHOX"))
str(soilgrids.r)
ov <- over(soilgrids.r,pnts)
library(rjson)
library(GSIF)
library(sp)
pnts <- data.frame(lon=c(10.65,5.36), lat=c(51.81,51.48), id=c("p1","p2"))
coordinates(pnts) <- ~lon+lat
proj4string(pnts) <- CRS("+proj=longlat +datum=WGS84")
pnts
soilgrids.r <- REST.SoilGrids(c("ORCDRC","PHIHOX"))
str(soilgrids.r)
ov <- over(soilgrids.r,pnts)
str(ov)
library(sp)
ov <- over(soilgrids.r,pnts)
21513-20457
1056/21513
set.wd('/Users/fvrodriguez/Desktop/GLOBAL_PHOSPHORUS_DIST_MAP_1223/data')
setwd('/Users/fvrodriguez/Desktop/GLOBAL_PHOSPHORUS_DIST_MAP_1223/data')
install.packages('ncdf')
install.packages('ncdf4')
phospho.nc <- raster(pforms_den.nc)
librarry(raster)
library(raster)
library(ncdf4)
phospho.nc <- raster(pforms_den.nc)
setwd('/Users/fvrodriguez/Desktop/GLOBAL_PHOSPHORUS_DIST_MAP_1223/data')
phospho.nc <- raster(pforms_den.nc)
phospho.nc <- raster("pforms_den.nc")
phospho.nc <-nc_open("pforms_den.nc")
str(phospho.nc)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
writeRaster(lab, filename="lab.tif", format="GTiff",overwrite=TRUE)
writeRaster(t2m, filename="lab.tif", format="GTiff",overwrite=TRUE)
summary(nc)
summary(phospho.nc )
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(nc)
print(phospho.nc)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
summary(lab)
print(phospho.nc)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="Labile Inorganic P")
summary(lab)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="Labile Inorganic P")
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
summary(lab)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
print(lab)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
summary(lab)
print(lab)
summary(lab)
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(phospho.nc)
str(phospho.nc)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
lab
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(phospho.nc)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
writeRaster(lab, filename="lab.tif", format="GTiff",overwrite=TRUE)
summary(lab)
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(phospho.nc)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
summary(lab)
library(raster)
library(ncdf4)
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(phospho.nc)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
summary(lab)
summary(lab)
summary(lab)
### My variable is 2-m air temperature "t2m" ###
lab <- brick("pforms_den.nc", varname="lab")
summary(lab)
### My variable is 2-m air temperature "t2m" ###
?brick
lab <- brick("pforms_den.nc", varname="lab",
nl = 1)
summary(lab)
lab
writeRaster(lab, filename="lab.tif", format="GTiff",overwrite=TRUE)
summary(lab)
stack(lab)
print(r)
r<-stack(lab)
print(r)
names(r)
extent(r) <- extent(0, 360, -90, 90)
rr <- rotate(r)
print(rr)
names(rr)
writeRaster(rr, filename="lab.tif", format="GTiff",overwrite=TRUE)
raster("lab.tif")
labile.p  <- raster("lab.tif")
plot(labile.p)
quartz()
plot(labile.p)
quartz()
plot(labile.p)
pot <- raster("Global_distribution_of_soil_phosphorus_retention_potential.tif")
plot(pot)
quartz()
plot(pot)
quartz()
plot(pot, ylim = c(-20,20), xlim =c(-80,-20))
pot <- raster("Global_distribution_of_soil_phosphorus_retention_potential.tif")
quartz()
plot(pot, ylim = c(-23,23), xlim =c(-100,-20))
quartz()
plot(pot, ylim = c(-25,25), xlim =c(-120,-20))
quartz()
plot(pot, ylim = c(-25,30), xlim =c(-120,-20))
quartz()
plot(pot, ylim = c(-25,40), xlim =c(-120,-20))
summary(pot)
hist(pot)
hist(pot)
quartz()
hist(pot)
quartz()
plot(labile.p)
rr <- rotate(r)
print(rr)
names(rr)
writeRaster(rr, filename="lab.tif", format="GTiff",overwrite=TRUE)
writeRaster(lab, filename="lab.tif", format="GTiff",overwrite=TRUE)
labile.p  <- raster("lab.tif")
quartz()
plot(labile.p)
phospho.nc <-nc_open("pforms_den.nc")
summary(phospho.nc )
print(phospho.nc)
### My variable is 2-m air temperature "t2m" ###
?brick
lab <- brick("pforms_den.nc", varname="lab",
nl = 1)
summary(lab)
r<-stack(lab)
print(r)
names(r)
extent(r) <- extent(0, 360, -90, 90)
rr <- rotate(r)
print(rr)
names(rr)
writeRaster(rr, filename="lab.tif", format="GTiff",overwrite=TRUE)
writeRaster(lab, filename="lab.tif", format="GTiff",overwrite=TRUE)
labile.p  <- raster("lab.tif")
writeRaster(rr, filename="lab.tif", format="GTiff",overwrite=TRUE)
labile.p  <- raster("lab.tif")
quartz()
plot(labile.p)
rr <- rotate(r)
print(rr)
names(rr)
writeRaster(rr, filename="lab.tif", format="GTiff",overwrite=TRUE)
labile.p  <- raster("lab.tif")
quartz()
plot(labile.p)
extent(r) <- extent(-180, 180, -90, 90)
rr <- rotate(r)
print(rr)
writeRaster(rr, filename="lab.tif", format="GTiff",overwrite=TRUE)
labile.p  <- raster("lab.tif")
quartz()
plot(labile.p)
library(rgdal)
ogrInfo("~/Desktop/Global_distribution_of_soil_phosphorus_retention_potential",
"country")
ogrInfo("~/Desktop/Global_distribution_of_soil_phosphorus_retention_potential",
"country")
ogrInfo("~/Desktop/Global_distribution_of_soil_phosphorus_retention_potential/GIS",
"country")
ogrInfo("~/Desktop/Global_distribution_of_soil_phosphorus_retention_potential/GIS",
"country")
ogrInfo("~/Desktop/Global_distribution_of_soil_phosphorus_retention_potential/GIS/",
"country")
setwd('~/Desktop/Global_distribution_of_soil_phosphorus_retention_potential/GIS/')
library(rgdal)
ogrInfo("",
"country")
ogrInfo(".",
"country")
ogrInfo(".", "Generalized P-retention potential (dominant class)")
ogrInfo(".", "country")
setwd('~/Desktop/Global_distribution_of_soil_phosphorus_retention_potential/')
fgdb <- "ISRIC_Phosphorus_Retention_Potential.mdb"
# List all feature classes in a file geodatabase
subset(ogrDrivers(), grepl("GDB", name))
fc_list <- ogrListLayers(fgdb)
fgdb <- "ISRIC_Phosphorus_Retention_Potential.mdb"
getwd()
fgdb <- "ISRIC_Phosphorus_Retention_Potential.mdb"
# List all feature classes in a file geodatabase
subset(ogrDrivers(), grepl("GDB", name))
fc_list <- ogrListLayers(fgdb)
readOGR(dsn=".")
readOGR(dsn="./")
readOGR(dsn=getwd())
readOGR(dsn=getwd())
getwd()
readOGR(dsn=getwd(),layer = "ISRIC_Phosphorus_Retention_Potential")
