dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
# Assign RAT to main class raster
levels(ISRIC2011$main) <- get_rat(ISRIC2011$main) %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011$main)[[1]]
ISRIC2011$main <- layers_from(ISRIC2011$FAO74, cols = "ascending")[[1]]
# Raster Attribute Table
ISRIC2011$main <- raster::ratify(ISRIC2011$main)
# Assign RAT to main class raster
levels(ISRIC2011$main) <- get_rat(ISRIC2011$main) %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011$main)[[1]]
ISRIC2011$main <- layers_from(ISRIC2011$FAO74, cols = "ascending")[[1]]
raster::writeRaster(
ISRIC2011$main,
file.path(extdata_dir,"ISRIC2011","main.tif"),
datatype = 'INT1U',
overwrite = TRUE)
out_tif <- file.path(extdata_dir,"tif","LD_composite.tif")
writeRaster(LD_composite, filename = out_tif,
datatype  = "INT1U",
options   = "TFW=YES",
format    = "GTiff",
overwrite = TRUE)
out_tif <- file.path(extdata_dir,"ISRIC2011","LD_composite.tif")
out_tif <- file.path(extdata_dir,"ISRIC2011","LD_composite.tif")
writeRaster(LD_composite, filename = out_tif,
datatype  = "INT1U",
options   = "TFW=YES",
format    = "GTiff",
overwrite = TRUE)
load_all(pkg = here())
ISRIC_AT <- within(ISRIC_AT, {
su_share <- soil_composition(mapunit,FAO74)
su_share <- as.data.frame(
cbind( ID = mapunit$ID,
su_share,
soilS = row_entropy(su_share/100)))
})
load_all(pkg = here())
ISRIC_AT <- within(ISRIC_AT, {
su_share <- soil_composition(mapunit,FAO74)
su_share <- as.data.frame(
cbind( ID = mapunit$ID,
su_share,
soilS = row_entropy(su_share/100)))
})
phychem_vars <- c("pH","SAND","SILT","CLAY","CECLAY")
su_types <- colnames(ISRIC_AT$su_share)
ret_vars <- c("ID",
"mainclass",
phychem_vars,
pct_vars,
su_types)
levels <- soilclass %>%
dplyr::arrange(ascending) %>%
dplyr::select(main)
ISRIC_AT <- within(ISRIC_AT, {
ret_share <- mapunit %>%
dplyr::left_join(soilunit, by = c("SOIL1" = "key")) %>%
dplyr::left_join(su_share, by = "ID") %>%
dplyr::select(!!!ret_vars)
ret_share$mainclass <- factor(ret_share$mainclass, levels = levels$main[1:16])
})
library(devtools)
library(here)
library(raster)
load_all(pkg = here())
library(dplyr)
library(tidyr)
library(Hmisc)
library(MASS)
library(ggplot2)
library(ade4)
data_dir    <- system.file("data",    package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
FAO74_tif <- file.path(extdata_dir,"ISRIC2011", "FAO74.tif")
# Initializing ISRIC2011 list with the base map
ISRIC2011 <- list()
ISRIC2011$FAO74 <- raster::raster(FAO74_tif)
nb_plot(ISRIC2011$FAO74, main = "Soil Map of the World, FAO74")
mdb_file <- file.path(
extdata_dir,
"ISRIC2011",
"ISRIC_Phosphorus_Retention_Potential.mdb")
### Get Raster Attribute Tables
ISRIC_AT <- list()
ISRIC_AT <- read_ISRIC_RAT(mdb_file)
### Adding ID Raster Attribute Table to FAO74
ISRIC2011$FAO74 <- raster::raster(FAO74_tif)
ISRIC2011$FAO74 <- raster::ratify(ISRIC2011$FAO74)
levels(ISRIC2011$FAO74) <- ISRIC_AT$mapunit
pct_vars <- c("Lo", "Mo", "Hi", "VH", "MISC")
ISRIC2011 <- c(ISRIC2011, layers_from(ISRIC2011$FAO74,cols = pct_vars))
for (varname in pct_vars) {
out_tif <- file.path( extdata_dir, "ISRIC2011", paste0(varname,".tif"))
writeRaster(ISRIC2011[[varname]],
file = out_tif,
datatype = 'INT1U',
overwrite = TRUE)
nb_plot(ISRIC2011[[varname]], main =  varname)
}
?soilclass
### Adding ID Raster Attribute Table to FAO74
ISRIC_AT$mu_soilclass <- ISRIC_AT$mapunit %>%
dplyr::left_join(soilclass, by = c("mainclass" = "main"))
levels(ISRIC2011$FAO74) <- ISRIC_AT$mu_soilclass
ISRIC2011$main <- layers_from(ISRIC2011$FAO74, cols = "ascending")[[1]]
raster::writeRaster(
ISRIC2011$main,
file.path(extdata_dir,"ISRIC2011","main.tif"),
datatype = 'INT1U',
overwrite = TRUE)
nb_plot(ISRIC2011$main,
axis.args = list(breaks=0:15, at = 0:15, cex.axis = 2),
main =  "Phosphorus Retention Potential, ISRIC2011")
# Raster Attribute Table
ISRIC2011$main <- raster::ratify(ISRIC2011$main)
# Assign RAT to main class raster
levels(ISRIC2011$main) <- get_rat(ISRIC2011$main) %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
main_color <- layers_from(ISRIC2011$FAO74, cols = c("r","g","b"))
plotRGB(stack(main_color))
writeRaster(stack(main_color),
filename  = file.path(extdata_dir, "ISRIC2011","main_color.tif"),
datatype  = "INT1U",
options   = "TFW=YES",
format    = "GTiff",
overwrite = TRUE)
rasterVis::levelplot(
ISRIC2011$main, att = "main",
col.regions = soilclass$color_hex[1:16],
maxpixels = ncell(ISRIC2011$main),
scales = list(draw = FALSE),
xlab = NULL, ylab = NULL,
main = "Generalized Phosphorus Retention Potential Map")
ISRIC_AT <- within(ISRIC_AT, {
su_share <- soil_composition(mapunit,FAO74)
su_share <- as.data.frame(
cbind( ID = mapunit$ID,
su_share,
soilS = row_entropy(su_share/100)))
})
n <- length(grep("PROP", colnames(mapunit)))
library(devtools)
library(here)
library(raster)
load_all(pkg = here())
library(dplyr)
library(tidyr)
library(Hmisc)
library(MASS)
library(ggplot2)
library(ade4)
data_dir    <- system.file("data",    package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
FAO74_tif <- file.path(extdata_dir,"ISRIC2011", "FAO74.tif")
# Initializing ISRIC2011 list with the base map
ISRIC2011 <- list()
ISRIC2011$FAO74 <- raster::raster(FAO74_tif)
nb_plot(ISRIC2011$FAO74, main = "Soil Map of the World, FAO74")
mdb_file <- file.path(
extdata_dir,
"ISRIC2011",
"ISRIC_Phosphorus_Retention_Potential.mdb")
### Get Raster Attribute Tables
ISRIC_AT <- list()
ISRIC_AT <- read_ISRIC_RAT(mdb_file)
### Adding ID Raster Attribute Table to FAO74
ISRIC2011$FAO74 <- raster::raster(FAO74_tif)
ISRIC2011$FAO74 <- raster::ratify(ISRIC2011$FAO74)
levels(ISRIC2011$FAO74) <- ISRIC_AT$mapunit
pct_vars <- c("Lo", "Mo", "Hi", "VH", "MISC")
ISRIC2011 <- c(ISRIC2011, layers_from(ISRIC2011$FAO74,cols = pct_vars))
for (varname in pct_vars) {
out_tif <- file.path( extdata_dir, "ISRIC2011", paste0(varname,".tif"))
writeRaster(ISRIC2011[[varname]],
file = out_tif,
datatype = 'INT1U',
overwrite = TRUE)
nb_plot(ISRIC2011[[varname]], main =  varname)
}
?soilclass
### Adding ID Raster Attribute Table to FAO74
ISRIC_AT$mu_soilclass <- ISRIC_AT$mapunit %>%
dplyr::left_join(soilclass, by = c("mainclass" = "main"))
levels(ISRIC2011$FAO74) <- ISRIC_AT$mu_soilclass
ISRIC2011$main <- layers_from(ISRIC2011$FAO74, cols = "ascending")[[1]]
raster::writeRaster(
ISRIC2011$main,
file.path(extdata_dir,"ISRIC2011","main.tif"),
datatype = 'INT1U',
overwrite = TRUE)
nb_plot(ISRIC2011$main,
axis.args = list(breaks=0:15, at = 0:15, cex.axis = 2),
main =  "Phosphorus Retention Potential, ISRIC2011")
# Raster Attribute Table
ISRIC2011$main <- raster::ratify(ISRIC2011$main)
# Assign RAT to main class raster
levels(ISRIC2011$main) <- get_rat(ISRIC2011$main) %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
main_color <- layers_from(ISRIC2011$FAO74, cols = c("r","g","b"))
plotRGB(stack(main_color))
writeRaster(stack(main_color),
filename  = file.path(extdata_dir, "ISRIC2011","main_color.tif"),
datatype  = "INT1U",
options   = "TFW=YES",
format    = "GTiff",
overwrite = TRUE)
rasterVis::levelplot(
ISRIC2011$main, att = "main",
col.regions = soilclass$color_hex[1:16],
maxpixels = ncell(ISRIC2011$main),
scales = list(draw = FALSE),
xlab = NULL, ylab = NULL,
main = "Generalized Phosphorus Retention Potential Map")
ISRIC_AT <- within(ISRIC_AT, {
su_share <- soil_composition(mapunit,FAO74)
su_share <- as.data.frame(
cbind( ID = mapunit$ID,
su_share,
soilS = row_entropy(su_share/100)))
})
phychem_vars <- c("pH","SAND","SILT","CLAY","CECLAY")
su_types <- colnames(ISRIC_AT$su_share)
ret_vars <- c("ID",
"mainclass",
phychem_vars,
pct_vars,
su_types)
levels <- soilclass %>%
dplyr::arrange(ascending) %>%
dplyr::select(main)
ISRIC_AT <- within(ISRIC_AT, {
ret_share <- mapunit %>%
dplyr::left_join(soilunit, by = c("SOIL1" = "key")) %>%
dplyr::left_join(su_share, by = "ID") %>%
dplyr::select(!!!ret_vars)
ret_share$mainclass <- factor(ret_share$mainclass, levels = levels$main[1:16])
})
ISRIC_AT <- within(ISRIC_AT, {
ret_share$pS <- row_entropy(ret_share[,pct_vars] / 100)
})
with(ISRIC_AT,{
boxplot(soilS ~ mainclass, data = ret_share, las = 2,
main = "Map Unit Soil Composition Entropy")
boxplot(pS ~ mainclass, data = ret_share, las = 2,
main = "Phosphorus Retention Class Composition Entropy")
})
# create dudi object for discriminant analysis
soil_idx <- with(ISRIC_AT$ret_share,{
which(is_soil(mainclass))
})
soil_data <- ISRIC_AT$ret_share[soil_idx,-1]
soil_data$mainclass   <- with(ISRIC_AT$ret_share,{
factor(mainclass[soil_idx], levels = levels$main[5:16])
})
pca <- dudi.pca(soil_data[,-1], scannf = FALSE, nf = 139)
dis <- discrimin(pca, fac = soil_data$mainclass, scannf = FALSE, nf = 10)
palette <- soilclass$color_hex[5:16]
color <- palette[soil_data$mainclass]
# Select most important variables
disva <- as.data.frame(dis$va)
disva$idx <- (1:nrow(dis$va)) / 1000
major_vars <- 1000 * disva %>%
dplyr::filter_all(any_vars(abs(.) > 0.5)) %>%
dplyr::select(idx)
# Plot
par(mfrow = c(2, 2))
s.class(dis$li, xax = 2, yax = 1, fac = soil_data$mainclass, col = palette)
s.class(dis$li, xax = 3, yax = 1, fac = soil_data$mainclass, col = palette)
s.class(dis$li, xax = 3, yax = 2, fac = soil_data$mainclass, col = palette)
s.corcircle(dis$va[major_vars$idx,])
par(mfrow = c(1, 1))
fit <- MASS::lda(mainclass ~ ., data = soil_data)
plda <- predict(object = fit, # predictions
newdata = ISRIC_AT$ret_share[,-c(1,2)])
ret_scale<- NA
ISRIC_AT <- within(ISRIC_AT,{
ret_scale <- ret_share[,c("ID",pct_vars)]
ret_scale$ret <- ret_share$mainclass
ret_scale[!is_soil(ret_scale$ret), pct_vars] <- NA
})
ISRIC_AT$ret_scale <- within(ISRIC_AT$ret_scale,{
# Weighted scale, ad hoc weights!!!!!!
weighted <- as.double((Lo + 2 * Mo + 3 * Hi + 4 * VH) / 400)
# Linear Discrimant scale, post hoc weights/coefficients
LD1 <-  plda$x[,1]
LD2 <-  -plda$x[,2] # sign manually adjusted
LD3 <-  -plda$x[,3] # sign manually adjusted
LD1[!is_soil(ret)] <- NA
LD2[!is_soil(ret)] <- NA
LD3[!is_soil(ret)] <- NA
})
with(ISRIC_AT,{
plot_P_scales(ret_scale[soil_idx,], palette = palette,
scale_x = "LD2",scale_y = "weighted")
})
ld_vars <- c("weighted", "LD1", "LD2", "LD3")
ISRIC_AT <- within(ISRIC_AT,{
raster_scale <- mu_soilclass[,c("ID",pct_vars)] %>%
dplyr::left_join(ret_scale[,c("ID",ld_vars)],
by = c("ID" = "ID")) %>%
dplyr::mutate_if(colnames(.) %in% ld_vars, scale256)
})
levels(ISRIC2011$FAO74) <- ISRIC_AT$raster_scale
ISRIC2011 <- c(ISRIC2011, layers_from(ISRIC2011$FAO74, cols = ld_vars))
for(varname in ld_vars) {
out_tif <- file.path( extdata_dir, "ISRIC2011", paste0(varname,".tif"))
writeRaster(ISRIC2011[[varname]],
file = out_tif,
datatype = 'INT1U',
overwrite = TRUE)
nb_plot(ISRIC2011[[varname]], main =  varname)
}
# finally save ISRIC2011 in .RData format
save(ISRIC_AT, file = file.path(data_dir, "ISRIC_AT.RData"))
save(ISRIC2011, file = file.path(data_dir, "ISRIC2011.RData"))
LD_composite <- stack(ISRIC2011[c("LD2","LD1","LD3")])
op <- par()
par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
plotRGB(LD_composite)
par(op)
out_tif <- file.path(extdata_dir,"ISRIC2011","LD_composite.tif")
writeRaster(LD_composite, filename = out_tif,
datatype  = "INT1U",
options   = "TFW=YES",
format    = "GTiff",
overwrite = TRUE)
library(raster)
library(soilP)
library(dplyr)
library(tidyr)
library(Hmisc)
library(MASS)
library(ggplot2)
library(ade4)
data_dir    <- system.file("data",    package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
FAO74_tif <- file.path(extdata_dir,"ISRIC2011", "FAO74.tif")
# Initializing ISRIC2011 list with the base map
ISRIC2011 <- list()
ISRIC2011$FAO74 <- raster::raster(FAO74_tif)
nb_plot(ISRIC2011$FAO74, main = "Soil Map of the World, FAO74")
mdb_file <- file.path(
extdata_dir,
"ISRIC2011",
"ISRIC_Phosphorus_Retention_Potential.mdb")
### Get Raster Attribute Tables
ISRIC_AT <- list()
ISRIC_AT <- read_ISRIC_AT(mdb_file)
### Adding ID Raster Attribute Table to FAO74
ISRIC2011$FAO74 <- raster::raster(FAO74_tif)
ISRIC2011$FAO74 <- raster::ratify(ISRIC2011$FAO74)
levels(ISRIC2011$FAO74) <- ISRIC_AT$mapunit
pct_vars <- c("Lo", "Mo", "Hi", "VH", "MISC")
ISRIC2011 <- c(ISRIC2011, layers_from(ISRIC2011$FAO74,cols = pct_vars))
for (varname in pct_vars) {
out_tif <- file.path( extdata_dir, "ISRIC2011", paste0(varname,".tif"))
writeRaster(ISRIC2011[[varname]],
file = out_tif,
datatype = 'INT1U',
overwrite = TRUE)
nb_plot(ISRIC2011[[varname]], main =  varname)
}
?soilclass
### Adding ID Raster Attribute Table to FAO74
ISRIC_AT$mu_soilclass <- ISRIC_AT$mapunit %>%
dplyr::left_join(soilclass, by = c("mainclass" = "main"))
levels(ISRIC2011$FAO74) <- ISRIC_AT$mu_soilclass
ISRIC2011$main <- layers_from(ISRIC2011$FAO74, cols = "ascending")[[1]]
raster::writeRaster(
ISRIC2011$main,
file.path(extdata_dir,"ISRIC2011","main.tif"),
datatype = 'INT1U',
overwrite = TRUE)
nb_plot(ISRIC2011$main,
axis.args = list(breaks=0:15, at = 0:15, cex.axis = 2),
main =  "Phosphorus Retention Potential, ISRIC2011")
# Raster Attribute Table
ISRIC2011$main <- raster::ratify(ISRIC2011$main)
# Assign RAT to main class raster
levels(ISRIC2011$main) <- rat(ISRIC2011$main) %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
main_color <- layers_from(ISRIC2011$FAO74, cols = c("r","g","b"))
plotRGB(stack(main_color))
writeRaster(stack(main_color),
filename  = file.path(extdata_dir, "ISRIC2011","main_color.tif"),
datatype  = "INT1U",
options   = "TFW=YES",
format    = "GTiff",
overwrite = TRUE)
rasterVis::levelplot(
ISRIC2011$main, att = "main",
col.regions = soilclass$color_hex[1:16],
maxpixels = ncell(ISRIC2011$main),
scales = list(draw = FALSE),
xlab = NULL, ylab = NULL,
main = "Generalized Phosphorus Retention Potential Map")
ISRIC_AT <- within(ISRIC_AT, {
su_share <- soil_composition(mapunit,FAO74)
su_share <- as.data.frame(
cbind( ID = mapunit$ID,
su_share,
soilS = row_entropy(su_share/100)))
})
phychem_vars <- c("pH","SAND","SILT","CLAY","CECLAY")
su_types <- colnames(ISRIC_AT$su_share)
ret_vars <- c("ID",
"mainclass",
phychem_vars,
pct_vars,
su_types)
levels <- soilclass %>%
dplyr::arrange(ascending) %>%
dplyr::select(main)
ISRIC_AT <- within(ISRIC_AT, {
ret_share <- mapunit %>%
dplyr::left_join(soilunit, by = c("SOIL1" = "key")) %>%
dplyr::left_join(su_share, by = "ID") %>%
dplyr::select(!!!ret_vars)
ret_share$mainclass <- factor(ret_share$mainclass, levels = levels$main[1:16])
})
ISRIC_AT <- within(ISRIC_AT, {
ret_share$pS <- row_entropy(ret_share[,pct_vars] / 100)
})
with(ISRIC_AT,{
boxplot(soilS ~ mainclass, data = ret_share, las = 2,
main = "Map Unit Soil Composition Entropy")
boxplot(pS ~ mainclass, data = ret_share, las = 2,
main = "Phosphorus Retention Class Composition Entropy")
})
# create dudi object for discriminant analysis
soil_idx <- with(ISRIC_AT$ret_share,{
which(is_soil(mainclass))
})
soil_data <- ISRIC_AT$ret_share[soil_idx,-1]
soil_data$mainclass   <- with(ISRIC_AT$ret_share,{
factor(mainclass[soil_idx], levels = levels$main[5:16])
})
pca <- dudi.pca(soil_data[,-1], scannf = FALSE, nf = 139)
dis <- discrimin(pca, fac = soil_data$mainclass, scannf = FALSE, nf = 10)
palette <- soilclass$color_hex[5:16]
color <- palette[soil_data$mainclass]
# Select most important variables
disva <- as.data.frame(dis$va)
disva$idx <- (1:nrow(dis$va)) / 1000
major_vars <- 1000 * disva %>%
dplyr::filter_all(any_vars(abs(.) > 0.5)) %>%
dplyr::select(idx)
# Plot
par(mfrow = c(2, 2))
s.class(dis$li, xax = 2, yax = 1, fac = soil_data$mainclass, col = palette)
s.class(dis$li, xax = 3, yax = 1, fac = soil_data$mainclass, col = palette)
s.class(dis$li, xax = 3, yax = 2, fac = soil_data$mainclass, col = palette)
s.corcircle(dis$va[major_vars$idx,])
par(mfrow = c(1, 1))
fit <- MASS::lda(mainclass ~ ., data = soil_data)
plda <- predict(object = fit, # predictions
newdata = ISRIC_AT$ret_share[,-c(1,2)])
ret_scale<- NA
ISRIC_AT <- within(ISRIC_AT,{
ret_scale <- ret_share[,c("ID",pct_vars)]
ret_scale$ret <- ret_share$mainclass
ret_scale[!is_soil(ret_scale$ret), pct_vars] <- NA
})
ISRIC_AT$ret_scale <- within(ISRIC_AT$ret_scale,{
# Weighted scale, ad hoc weights!!!!!!
weighted <- as.double((Lo + 2 * Mo + 3 * Hi + 4 * VH) / 400)
# Linear Discrimant scale, post hoc weights/coefficients
LD1 <-  plda$x[,1]
LD2 <-  -plda$x[,2] # sign manually adjusted
LD3 <-  -plda$x[,3] # sign manually adjusted
LD1[!is_soil(ret)] <- NA
LD2[!is_soil(ret)] <- NA
LD3[!is_soil(ret)] <- NA
})
with(ISRIC_AT,{
plot_P_scales(ret_scale[soil_idx,], palette = palette,
scale_x = "LD2",scale_y = "weighted")
})
ld_vars <- c("weighted", "LD1", "LD2", "LD3")
ISRIC_AT <- within(ISRIC_AT,{
raster_scale <- mu_soilclass[,c("ID",pct_vars)] %>%
dplyr::left_join(ret_scale[,c("ID",ld_vars)],
by = c("ID" = "ID")) %>%
dplyr::mutate_if(colnames(.) %in% ld_vars, scale256)
})
levels(ISRIC2011$FAO74) <- ISRIC_AT$raster_scale
ISRIC2011 <- c(ISRIC2011, layers_from(ISRIC2011$FAO74, cols = ld_vars))
for(varname in ld_vars) {
out_tif <- file.path( extdata_dir, "ISRIC2011", paste0(varname,".tif"))
writeRaster(ISRIC2011[[varname]],
file = out_tif,
datatype = 'INT1U',
overwrite = TRUE)
nb_plot(ISRIC2011[[varname]], main =  varname)
}
# finally save ISRIC2011 in .RData format
save(ISRIC_AT, file = file.path(data_dir, "ISRIC_AT.RData"))
save(ISRIC2011, file = file.path(data_dir, "ISRIC2011.RData"))
LD_composite <- stack(ISRIC2011[c("LD2","LD1","LD3")])
op <- par()
par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
plotRGB(LD_composite)
par(op)
out_tif <- file.path(extdata_dir,"ISRIC2011","LD_composite.tif")
writeRaster(LD_composite, filename = out_tif,
datatype  = "INT1U",
options   = "TFW=YES",
format    = "GTiff",
overwrite = TRUE)
