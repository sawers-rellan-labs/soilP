1) # extracts first of multiple possible names
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
save(soilclass, file = file.path(data_dir,"soilclass.RData"))
soilclass
tif_in <- file.path(extdata_dir, "tif",
"P_retention_potential_main_grey.tif")
tif_out <- file.path( extdata_dir, "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat # This assignment method is not exported from raster
save(ISRIC2011, file = file.path(data_dir, "ISRIC2011.RData"))
plot(ISRIC2011, axes = FALSE, box = FALSE)
ISRIC2011_hist <- hist(ISRIC2011,maxpixels = ncell(ISRIC2011),
breaks = c(0, 0.99 + 0:15), xlab = "value",
main = "Phosphorus Retention Potential")
plot(ISRIC2011,
col = soilclass$color_hex[1:17],
breaks = c(0,0.99 + 0:15),
axes = FALSE, box = FALSE,
legend.width = 1,
legend.shrink = 0.6,
axis.args = list(at       = 0:15,
labels   = 0:15,
cex.axis = 0.6),
legend.args = list(text = "", cex = 0.8))
levelplot(ISRIC2011, att = "main", col.regions = soilclass$color_hex[1:16],
maxpixels = ncell(ISRIC2011),
main = "Generalized Phosphorus Retention Potential Map")
library(soilP)      # Phosphorus maps
library(raster)
library(rasterVis)  # Plot categorical raster
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
test_tif <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"Global_distribution_of_soil_phosphorus_retention_potential.tif")
test_raster <- raster(test_tif)
length(unique(values(test_raster)))
plot(test_raster, axes = FALSE, box = FALSE)
?soilclass
soilclass <- read.csv(file.path(extdata_dir,"P_retention_class.csv"))
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first of multiple possible names
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
save(soilclass, file = file.path(data_dir,"soilclass.RData"))
soilclass
tif_in <- file.path(extdata_dir, "tif",
"P_retention_potential_main_grey.tif")
tif_out <- file.path( extdata_dir, "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat # This assignment method is not exported from raster
save(ISRIC2011, file = file.path(data_dir, "ISRIC2011.RData"))
plot(ISRIC2011, axes = FALSE, box = FALSE)
ISRIC2011_hist <- hist(ISRIC2011,maxpixels = ncell(ISRIC2011),
breaks = c(0, 0.99 + 0:15), xlab = "value",
main = "Phosphorus Retention Potential")
plot(ISRIC2011,
col = soilclass$color_hex[1:17],
breaks = c(0,0.99 + 0:15),
axes = FALSE, box = FALSE,
legend.width = 1,
legend.shrink = 0.6,
axis.args = list(at       = 0:15,
labels   = 0:15,
cex.axis = 0.6),
legend.args = list(text = "", cex = 0.8))
levelplot(ISRIC2011, att = "main", col.regions = soilclass$color_hex[1:16],
maxpixels = ncell(ISRIC2011),
main = "Generalized Phosphorus Retention Potential Map")
library(soilP)      # Phosphorus maps
library(raster)
library(rasterVis)  # Plot categorical raster
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
test_tif <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"Global_distribution_of_soil_phosphorus_retention_potential.tif")
test_raster <- raster(test_tif)
op <- par()
par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
plot(test_raster, axes = FALSE, box = FALSE,
frame.plot = FALSE,
legend.width = 2,
legend.shrink = 0.95,
axis.args = list(cex.axis = 2),
legend.args = list(text = "", cex = 1))
par(op)
?soilclass
soilclass <- read.csv(file.path(extdata_dir,"P_retention_class.csv"))
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first of multiple possible names
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
save(soilclass, file = file.path(data_dir,"soilclass.RData"))
soilclass
tif_in <- file.path(extdata_dir, "tif",
"P_retention_potential_main_grey.tif")
tif_out <- file.path( extdata_dir, "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat # This assignment method is not exported from raster
save(ISRIC2011, file = file.path(data_dir, "ISRIC2011.RData"))
op <- par()
par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
plot(ISRIC2011, axes = FALSE, box = FALSE,
frame.plot = FALSE,
legend.width = 2,
legend.shrink = 0.95,
axis.args = list(breaks=1:14, at = 0:15, cex.axis = 2),
legend.args = list(text = "", cex = 1))
par(op)
ISRIC2011_hist <- hist(ISRIC2011,maxpixels = ncell(ISRIC2011),
breaks = c(0, 0.99 + 0:15), xlab = "value",
main = "Phosphorus Retention Potential")
op <- par()
par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
plot(ISRIC2011,
col = soilclass$color_hex[1:16],
breaks = c(0,0.99 + 0:15),
axes = FALSE, box = FALSE,
frame.plot = FALSE,
legend.width = 2,
legend.shrink = 0.95,
axis.args = list(at       = c(0,0.99 + 0:15),
labels   = c("",0:15),
cex.axis = 2),
legend.args = list(text = "", cex = 1))
par(op)
levelplot(ISRIC2011, att = "main", col.regions = soilclass$color_hex[1:16],
maxpixels = ncell(ISRIC2011),  scales = list(draw = FALSE),
xlab = NULL, ylab = NULL,
main = "Generalized Phosphorus Retention Potential Map")
library(soilP)      # Phosphorus maps
library(raster)
library(rasterVis)  # Plot categorical raster
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
test_tif <- file.path(extdata_dir,
"Global_distribution_of_soil_phosphorus_retention_potential",
"Global_distribution_of_soil_phosphorus_retention_potential.tif")
test_raster <- raster(test_tif)
op <- par()
par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
plot(test_raster, axes = FALSE, box = FALSE,
frame.plot = FALSE,
legend.width = 2,
legend.shrink = 0.95,
axis.args = list(cex.axis = 2),
legend.args = list(text = "", cex = 1))
par(op)
?soilclass
soilclass <- read.csv(file.path(extdata_dir,"P_retention_class.csv"))
soilclass
color_hex <- apply(soilclass %>% dplyr::select(r,g,b),
1,
function(x){rgb(x[1], x[2], x[3],
maxColorValue = 255)
})
color_name <- sapply(sapply(color_hex, plotrix::color.id),
`[[`,
1) # extracts first of multiple possible names
soilclass$color_hex <- color_hex
soilclass$color_name <- color_name
soilclass
soilclass <- soilclass[order(soilclass$ascending),]
save(soilclass, file = file.path(data_dir,"soilclass.RData"))
soilclass
tif_in <- file.path(extdata_dir, "tif",
"P_retention_potential_main_grey.tif")
tif_out <- file.path( extdata_dir, "tif",
"P_retention_potential_main_grey_ascending.tif")
ISRIC2011 <- read_P_ISRIC(tif       = tif_in,
soilclass = soilclass,
is        = "arcgis",
becomes   = "ascending",
filename  = tif_out)
# Raster Attribute Table
rat <- levels(ISRIC2011)[[1]] %>%
dplyr::inner_join(soilclass, by = c("ID" = "ascending"))
levels(ISRIC2011) <- rat # This assignment method is not exported from raster
save(ISRIC2011, file = file.path(data_dir, "ISRIC2011.RData"))
op <- par()
par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
plot(ISRIC2011, axes = FALSE, box = FALSE,
frame.plot = FALSE,
legend.width = 2,
legend.shrink = 0.95,
axis.args = list(breaks=1:14, at = 0:15, cex.axis = 2),
legend.args = list(text = "", cex = 1))
par(op)
ISRIC2011_hist <- hist(ISRIC2011,maxpixels = ncell(ISRIC2011),
breaks = c(0, 0.99 + 0:15), xlab = "value",
main = "Phosphorus Retention Potential")
op <- par()
par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
plot(ISRIC2011,
col = soilclass$color_hex[1:16],
breaks = c(0,0.99 + 0:15),
axes = FALSE, box = FALSE,
frame.plot = FALSE,
legend.width = 2,
legend.shrink = 0.95,
axis.args = list(at       = c(0,0.99 + 0:15),
labels   = c("",0:15),
cex.axis = 2),
legend.args = list(text = "", cex = 1))
par(op)
levelplot(ISRIC2011, att = "main", col.regions = soilclass$color_hex[1:16],
maxpixels = ncell(ISRIC2011),  scales = list(draw = FALSE),
xlab = NULL, ylab = NULL,
main = "Generalized Phosphorus Retention Potential Map")
library(soilP)    # Phosphorus maps
library(raster)
library(sf)       # Loading shapefiles for background
library(ggplot2)
data("ISRIC2011") # raster
data("soilclass") # raster attribute table
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
accn_file <- system.file("extdata",
"F1PARENTS120.csv",
package = "soilP",
mustWork = TRUE)
accn_info <- read.csv(accn_file)
accn_info$Elevation_class <- classify_elevation(accn_info$Elevation)
ISRIC_P <- extract_P_ISRIC(ISRIC2011, accn_info, soilclass,
lon = "Long", lat = "Lat")
GMBA_file <- file.path(extdata_dir, "GMBA mountain inventory_V1.1",
"GMBA mountain inventory_V1.1-World.shp")
mountain <- st_read(GMBA_file)
save(mountain, file =  file.path(data_dir,"mountain.RData"))
bg_map("Long", "Lat", data = ISRIC_P$georef, bg = mountain) +
ggtitle(paste0("Accession selection for F1s")) +
geom_point(aes(x = Long, y = Lat,
shape = Elevation_class,
colour = main),
data = ISRIC_P$georef) +
scale_color_manual(values = ISRIC_P$pal,
name = "Phosphorus\nRetention\nPotential",
breaks = ISRIC_P$breaks ) +
scale_shape_manual(values = c(16, 17)) +
theme(legend.key.size = unit(0.5, 'lines'))
nc_in <- file.path(extdata_dir,
"GLOBAL_PHOSPHORUS_DIST_MAP_1223",
"data", "pforms_den.nc")
ORNL2013 <- read_P_ORNL(nc_in)
save(ORNL2013,file = file.path(data_dir,"ORNL2013.RData"))
ORNL_P <- extract_P_ORNL(ORNL2013, ISRIC_P$georef,
lon = "Long", lat = "Lat" )
bg_map("Long", "Lat", data = ORNL_P$georef, bg = mountain) +
ggtitle(paste0("Accession selection for F1s")) +
geom_point(aes(x = Long, y = Lat,
shape = Elevation_class,
colour = lab),
data = ORNL_P$georef) +
scale_colour_gradientn(name = "Labile Inorganic\nPhosphorus",
colours = ORNL_P$pal(180),
limits = c(1, 180)) +
scale_shape_manual(values = c(16, 17))
boxplot(lab ~ main, las = 2, data = ORNL_P$georef,
main = paste0("Corresponcence between Phosphorus Maps\n",
"ORNL 2013 Vs ISRIC 2011"),
xlab = "Phosphorus Retention Potential Main Class",
ylab = "Labile Inorganic Phosphorus")
pairs(ORNL_P$georef[,c("ascending", names(ORNL2013))])
library(soilP)    # Phosphorus maps
library(raster)
library(sf)       # Loading shapefiles for background
library(ggplot2)
data("ISRIC2011") # raster
data("soilclass") # raster attribute table
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
accn_file <- system.file("extdata",
"F1PARENTS120.csv",
package = "soilP",
mustWork = TRUE)
accn_info <- read.csv(accn_file)
accn_info$Elevation_class <- classify_elevation(accn_info$Elevation)
ISRIC_P <- extract_P_ISRIC(ISRIC2011, accn_info, soilclass,
lon = "Long", lat = "Lat")
GMBA_file <- file.path(extdata_dir, "GMBA mountain inventory_V1.1",
"GMBA mountain inventory_V1.1-World.shp")
mountain <- st_read(GMBA_file)
save(mountain, file =  file.path(data_dir,"mountain.RData"))
bg_map("Long", "Lat", data = ISRIC_P$georef, bg = mountain) +
ggtitle(paste0("Accession selection for F1s")) +
geom_point(aes(x = Long, y = Lat,
shape = Elevation_class,
colour = main),
data = ISRIC_P$georef) +
scale_color_manual(values = ISRIC_P$pal,
name = "Phosphorus\nRetention\nPotential",
breaks = ISRIC_P$breaks ) +
scale_shape_manual(values = c(16, 17)) +
theme(legend.key.size = unit(0.5, 'lines'))
nc_in <- file.path(extdata_dir,
"GLOBAL_PHOSPHORUS_DIST_MAP_1223",
"data", "pforms_den.nc")
ORNL2013 <- read_P_ORNL(nc_in)
save(ORNL2013,file = file.path(data_dir,"ORNL2013.RData"))
ORNL_P <- extract_P_ORNL(ORNL2013, ISRIC_P$georef,
lon = "Long", lat = "Lat" )
bg_map("Long", "Lat", data = ORNL_P$georef, bg = mountain) +
ggtitle(paste0("Accession selection for F1s")) +
geom_point(aes(x = Long, y = Lat,
shape = Elevation_class,
colour = lab),
data = ORNL_P$georef) +
scale_colour_gradientn(name = "Labile Inorganic\nPhosphorus",
colours = ORNL_P$pal(180),
limits = c(1, 180)) +
scale_shape_manual(values = c(16, 17))
boxplot(lab ~ main, las = 2, data = ORNL_P$georef,
main = paste0("Corresponcence between Phosphorus Maps\n",
"ORNL 2013 Vs ISRIC 2011"),
xlab = "Phosphorus Retention Potential Main Class",
ylab = "Labile Inorganic Phosphorus")
pairs(ORNL_P$georef[,c("ascending", names(ORNL2013))])
library(soilP)    # Phosphorus maps
library(raster)
library(sf)       # Loading shapefiles for background
library(ggplot2)
data("ISRIC2011") # raster
data("soilclass") # raster attribute table
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
GMBA_file <- file.path(extdata_dir, "GMBA mountain inventory_V1.1",
"GMBA mountain inventory_V1.1-World.shp")
mountain <- st_read(GMBA_file)
save(mountain, file =  file.path(data_dir,"mountain.RData"))
accn_file <- system.file("extdata",
"F1PARENTS120.csv",
package = "soilP",
mustWork = TRUE)
accn_info <- read.csv(accn_file)
accn_info$Elevation_class <- classify_elevation(accn_info$Elevation)
ISRIC_P <- extract_P_ISRIC(ISRIC2011, accn_info, soilclass,
lon = "Long", lat = "Lat")
bg_map("Long", "Lat", data = ISRIC_P$georef, bg = mountain) +
ggtitle(paste0("Accession selection for F1s")) +
geom_point(aes(x = Long, y = Lat,
shape = Elevation_class,
colour = main),
data = ISRIC_P$georef) +
scale_color_manual(values = ISRIC_P$pal,
name = "Phosphorus\nRetention\nPotential",
breaks = ISRIC_P$breaks ) +
scale_shape_manual(values = c(16, 17)) +
theme(legend.key.size = unit(0.5, 'lines'))
nc_in <- file.path(extdata_dir,
"GLOBAL_PHOSPHORUS_DIST_MAP_1223",
"data", "pforms_den.nc")
ORNL2013 <- read_P_ORNL(nc_in)
save(ORNL2013,file = file.path(data_dir,"ORNL2013.RData"))
ORNL_P <- extract_P_ORNL(ORNL2013, ISRIC_P$georef,
lon = "Long", lat = "Lat" )
bg_map("Long", "Lat", data = ORNL_P$georef, bg = mountain) +
ggtitle(paste0("Accession selection for F1s")) +
geom_point(aes(x = Long, y = Lat,
shape = Elevation_class,
colour = lab),
data = ORNL_P$georef) +
scale_colour_gradientn(name = "Labile Inorganic\nPhosphorus",
colours = ORNL_P$pal(180),
limits = c(1, 180)) +
scale_shape_manual(values = c(16, 17))
boxplot(lab ~ main, las = 2, data = ORNL_P$georef,
main = paste0("Corresponcence between Phosphorus Maps\n",
"ORNL 2013 Vs ISRIC 2011"),
xlab = "Phosphorus Retention Potential Main Class",
ylab = "Labile Inorganic Phosphorus")
pairs(ORNL_P$georef[,c("ascending", names(ORNL2013))])
library(dplyr)
library(soilP)
library(ggplot2)
data(soilclass)
data(ISRIC2011)
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
grin_file <- file.path(extdata_dir, "GRIN.csv")
grin <- read.csv(grin_file) %>%
select(accenumb,longdec, latdec, elevation)
burton_file <- file.path(extdata_dir,"burton2013.csv")
burton2013 <- read.csv(burton_file,3)
georef <- burton2013 %>%
left_join(grin, by = c("Accession" = "accenumb"))
# minor correction for an Argentinian Accession in GRIN
georef[georef$Accession == "PI 516074",
c("longdec","latdec")] <- c(-68.064167, -38.9525)
georef$elevation.class <- classify_elevation(georef$elevation)
ISRIC_P <- extract_P_ISRIC(ISRIC2011, georef, soilclass,
lon = "longdec", lat = "latdec")
data(mountain)
bg_map("longdec", "latdec", data = ISRIC_P$georef, bg = mountain) +
geom_point(aes(x = longdec, y = latdec,
shape = elevation.class,
colour = main),
data = ISRIC_P$georef) +
facet_wrap( ~ domestication, ncol = 2) +
scale_color_manual(values = ISRIC_P$pal,
name = "Phosphorus\nRetention\nPotential",
breaks = ISRIC_P$breaks ) +
scale_shape_manual(values = c(16,15, 17, 18))
library(dplyr)
library(soilP)
library(ggplot2)
data(soilclass)
data(ISRIC2011)
data_dir <- system.file("data", package = "soilP", mustWork = TRUE)
extdata_dir <- system.file("extdata", package = "soilP", mustWork = TRUE)
grin_file <- file.path(extdata_dir, "GRIN.csv")
grin <- read.csv(grin_file) %>%
select(accenumb,longdec, latdec, elevation)
burton_file <- file.path(extdata_dir,"burton2013.csv")
burton2013 <- read.csv(burton_file)
georef <- burton2013 %>%
left_join(grin, by = c("Accession" = "accenumb"))
# minor correction for an Argentinian Accession in GRIN
georef[georef$Accession == "PI 516074",
c("longdec","latdec")] <- c(-68.064167, -38.9525)
georef$elevation.class <- classify_elevation(georef$elevation)
ISRIC_P <- extract_P_ISRIC(ISRIC2011, georef, soilclass,
lon = "longdec", lat = "latdec")
data(mountain)
bg_map("longdec", "latdec", data = ISRIC_P$georef, bg = mountain) +
geom_point(aes(x = longdec, y = latdec,
shape = elevation.class,
colour = main),
data = ISRIC_P$georef) +
facet_wrap( ~ domestication, ncol = 2) +
scale_color_manual(values = ISRIC_P$pal,
name = "Phosphorus\nRetention\nPotential",
breaks = ISRIC_P$breaks ) +
scale_shape_manual(values = c(16,15, 17, 18))
#' # Script for installing soilP
library(here)
library(knitr)
library(devtools)
#' ### Unloading and removing package
detach("package:soilP", unload = TRUE)
detach("package:rasterVis", unload = TRUE)
detach("package:raster", unload = TRUE)
remove.packages("soilP")
#' ### Using backstitch for building scripts based upon .Rmd notebooks
devtools::source_gist('284671997992aefe295bed34bb53fde6', filename = 'backstitch.R')
scripts <- list.files(path    = here("inst", "notebooks"),
pattern = "\\.Rmd")
for (s in scripts) {
base <- tools::file_path_sans_ext(s)
backstitch(infile       = here("inst", "notebooks", paste0(base, ".Rmd")),
outfile      = here("inst", "scripts", paste0(base, ".R")),
output_type  = 'script',
chunk_header = "#+")
}
#' ### Building and Installing package
setwd(here())
setwd("../")
document("soilP")
build("soilP")
install.packages(pkgs = "soilP_0.1.0.tar.gz",
repos = NULL, # Tells R not to try to get the package from CRAN
type = "source" )
setwd("./soilP")
#' Compiling pdf documentation
path <- find.package("soilP")
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", "--force", shQuote(path)))
